<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />
	<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
			Color="{DynamicResource DefaultFGColor}" />
	<!--Style and template for the button in the upper left corner of the DataGrid.-->
	<Style TargetType="{x:Type Button}" x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, 
  TypeInTargetAssembly={x:Type DataGrid}}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridHeaderMouseOverBackgroundColor}" />
										<ColorAnimation Duration="0" Storyboard.TargetName="BorderColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridHeaderMouseOverBorderColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridHeaderPressedBackgroundColor}" />
										<ColorAnimation Duration="0" Storyboard.TargetName="BorderColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridHeaderPressedBorderColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridHeaderPressedBackgroundColor}" />
										<ColorAnimation Duration="0" Storyboard.TargetName="BorderColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridHeaderPressedBorderColor}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="Border" SnapsToDevicePixels="True">
							<Rectangle.Stroke>
								<SolidColorBrush x:Name="BorderColor"
										Color="{DynamicResource DataGridHeaderBorderColor}" />
							</Rectangle.Stroke>
							<Rectangle.Fill>
								<SolidColorBrush x:Name="BackgroundColor"
										Color="{DynamicResource DataGridHeaderBackgroundColor}" />
							</Rectangle.Fill>
						</Rectangle>
						<Polygon x:Name="Arrow" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15"
								Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom">
							<Polygon.Fill>
								<SolidColorBrush Color="{DynamicResource GlyphColor}" />
							</Polygon.Fill>
						</Polygon>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--Style and template for the DataGrid.-->
	<Style TargetType="{x:Type DataGrid}">
		<Setter Property="Foreground" Value="{DynamicResource DefaultFGColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource DataGridRowBorderBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="VerticalScrollBarVisibility" Value="Visible" />
		<Setter Property="EnableColumnVirtualization" Value="True" />
		<Setter Property="EnableRowVirtualization" Value="True" />
		<Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
		<Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
		<Setter Property="AutoGenerateColumns" Value="False" />
		<Setter Property="HeadersVisibility" Value="Column" />
		<Setter Property="AlternationCount" Value="2" />
		<Setter Property="IsReadOnly" Value="True" />
		<Setter Property="FontFamily" Value="Lucida Console" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGrid}">
					<Border x:Name="border" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
						<Border.Background>
							<SolidColorBrush x:Name="BackgroundColor" Color="{DynamicResource DataGridBackgroundColor}" />
						</Border.Background>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridDisabledColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ScrollViewer x:Name="DG_ScrollViewer" Focusable="false"
								Background="{DynamicResource DataGridBackgroundBrush}">
							<ScrollViewer.Template>
								<ControlTemplate TargetType="{x:Type ScrollViewer}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="*" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<Button Focusable="false" Command="{x:Static DataGrid.SelectAllCommand}" Style="{DynamicResource {ComponentResourceKey 
                                                ResourceId=DataGridSelectAllButtonStyle, 
                                                TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, 
                                                ConverterParameter={x:Static DataGridHeadersVisibility.All}, 
                                                Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, 
                                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
										<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
												Grid.Column="1" Visibility="{Binding HeadersVisibility, 
                                                ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                                                Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
										<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2"
												Grid.Row="1" CanContentScroll="{TemplateBinding CanContentScroll}" />
										<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Grid.Row="1"
												Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}"
												Maximum="{TemplateBinding ScrollableHeight}"
												Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, 
                                                RelativeSource={RelativeSource TemplatedParent}}" />
										<Grid Grid.Column="1" Grid.Row="2">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, 
                                                     RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1"
													Orientation="Horizontal"
													ViewportSize="{TemplateBinding ViewportWidth}"
													Maximum="{TemplateBinding ScrollableWidth}"
													Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, 
                                                        RelativeSource={RelativeSource TemplatedParent}}" />
										</Grid>
									</Grid>
								</ControlTemplate>
							</ScrollViewer.Template>
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsGrouping" Value="true">
				<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<!--Style and template for the DataGridCell.-->
	<Style TargetType="{x:Type DataGridCell}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridCell}">
					<Border x:Name="border" BorderBrush="Transparent" BorderThickness="1" Background="Transparent"
							SnapsToDevicePixels="True">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="Focused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="CurrentStates">
								<VisualState x:Name="Regular" />
								<VisualState x:Name="Current">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).
                                            (SolidColorBrush.Color)"
												To="{DynamicResource DataGridCellSelectedBorderColor}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="3,0,3,0" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--Style and template for the DataGridRow.-->
	<Style TargetType="{x:Type DataGridRow}">
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Background">
			<Setter.Value>
				<SolidColorBrush Color="{DynamicResource DataGridRowBackgroundColor}" />
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground">
			<Setter.Value>
				<SolidColorBrush x:Name="ForegroundColor" Color="{DynamicResource DefaultFGColor}" />
			</Setter.Value>
		</Setter>
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
		<Setter Property="ValidationErrorTemplate">
			<Setter.Value>
				<ControlTemplate>
					<TextBlock Foreground="ErrorForegroundBrush" Margin="2,0,0,0" Text="Error!"
							VerticalAlignment="Center" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridRow}">
					<Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
						<Border.Background>
							<SolidColorBrush x:Name="BackgroundColor"
									Color="{DynamicResource DataGridRowBackgroundColor}" />
						</Border.Background>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Normal_AlternatingRow">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridAltRowBackgroundColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal_Selected">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridRowPressedBackgroundColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused_Selected">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridRowPressedBackgroundColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal_Editing">
									<Storyboard></Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver_Editing">
									<Storyboard></Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver_Unfocused_Editing">
									<Storyboard></Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused_Editing">
									<Storyboard></Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridRowMouseOverBackgroundColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver_Selected">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridRowPressedBackgroundColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver_Unfocused_Selected">
									<Storyboard></Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<SelectiveScrollingGrid>
							<SelectiveScrollingGrid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</SelectiveScrollingGrid.ColumnDefinitions>
							<SelectiveScrollingGrid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</SelectiveScrollingGrid.RowDefinitions>
							<DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							<DataGridDetailsPresenter Grid.Column="1" Grid.Row="1"
									Visibility="{TemplateBinding DetailsVisibility}" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, 
                                        ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
                                        Converter={x:Static DataGrid.RowDetailsScrollingConverter}, 
                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
							<DataGridRowHeader Grid.RowSpan="2"
									SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, 
                                        ConverterParameter={x:Static DataGridHeadersVisibility.Row}, 
                                        Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
						</SelectiveScrollingGrid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--Style and template for the resize control on the DataGridRowHeader.-->
	<Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Height" Value="8" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Cursor" Value="SizeNS" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--Style and template for the DataGridRowHeader.-->
	<Style TargetType="{x:Type DataGridRowHeader}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridRowHeader}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Normal_CurrentRow" />
								<VisualState x:Name="Unfocused_EditingRow" />
								<VisualState x:Name="Normal_EditingRow" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridHeaderMouseOverBackgroundColor}" />
										<ColorAnimation Duration="0" Storyboard.TargetName="BorderColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridHeaderMouseOverBorderColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver_CurrentRow" />
								<VisualState x:Name="MouseOver_Unfocused_EditingRow" />
								<VisualState x:Name="MouseOver_EditingRow" />
								<VisualState x:Name="MouseOver_Unfocused_Selected" />
								<VisualState x:Name="MouseOver_Selected">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridHeaderPressedBackgroundColor}" />
										<ColorAnimation Duration="0" Storyboard.TargetName="BorderColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridHeaderPressedBorderColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver_Unfocused_CurrentRow_Selected" />
								<VisualState x:Name="MouseOver_CurrentRow_Selected" />
								<VisualState x:Name="Unfocused_Selected"></VisualState>
								<VisualState x:Name="Unfocused_CurrentRow_Selected" />
								<VisualState x:Name="Normal_CurrentRow_Selected">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridHeaderPressedBackgroundColor}" />
										<ColorAnimation Duration="0" Storyboard.TargetName="BorderColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridHeaderPressedBorderColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal_Selected">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridHeaderPressedBackgroundColor}" />
										<ColorAnimation Duration="0" Storyboard.TargetName="BorderColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridHeaderPressedBorderColor}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="rowHeaderBorder" Width="10" BorderThickness="1">
							<Border.BorderBrush>
								<SolidColorBrush x:Name="BorderColor"
										Color="{DynamicResource DataGridHeaderBorderColor}" />
							</Border.BorderBrush>
							<Border.Background>
								<SolidColorBrush x:Name="BackgroundColor"
										Color="{DynamicResource DataGridHeaderBackgroundColor}" />
							</Border.Background>
							<StackPanel Orientation="Horizontal">
								<ContentPresenter VerticalAlignment="Center"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								<Control SnapsToDevicePixels="false" Template="{Binding ValidationErrorTemplate, 
                                        RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Visibility="{Binding (Validation.HasError), 
                                        Converter={StaticResource bool2VisibilityConverter}, 
                                        RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
							</StackPanel>
						</Border>
						<Thumb x:Name="PART_TopHeaderGripper" Style="{DynamicResource RowHeaderGripperStyle}"
								VerticalAlignment="Top" />
						<Thumb x:Name="PART_BottomHeaderGripper" Style="{DynamicResource RowHeaderGripperStyle}"
								VerticalAlignment="Bottom" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--Style and template for the resize control on the DataGridColumnHeader.-->
	<Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Width" Value="8" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Cursor" Value="SizeWE" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--Style and template for the DataGridColumnHeader.-->
	<Style TargetType="{x:Type DataGridColumnHeader}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
					<Grid>
						<Border x:Name="columnHeaderBorder" BorderThickness="0,1,1,1"
								BorderBrush="{DynamicResource DataGridHeaderBorderBrush}"
								Background="{DynamicResource DataGridHeaderBackgroundBrush}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="20" />
								</Grid.ColumnDefinitions>
								<ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Center"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="3,0,3,0" />
								<Path x:Name="SortArrow" Grid.Column="1" HorizontalAlignment="Center"
										VerticalAlignment="Center" Width="8" Height="6" Margin="2,0,5,0" Stretch="Fill"
										Fill="{DynamicResource DataGridSelectedColumnHeaderTextBrush}"
										RenderTransformOrigin="0.5,0.4" Visibility="Hidden" Data="M0,0 L1,0 0.5,1 z" />
							</Grid>
						</Border>
						<Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left"
								Style="{DynamicResource ColumnHeaderGripperStyle}" />
						<Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right"
								Style="{DynamicResource ColumnHeaderGripperStyle}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="columnHeaderBorder" Property="Background"
									Value="{DynamicResource DataGridHeaderMouseOverBackgroundBrush}" />
							<Setter TargetName="columnHeaderBorder" Property="BorderBrush"
									Value="{DynamicResource DataGridHeaderMouseOverBorderBrush}" />
							<Setter Property="Foreground"
									Value="{DynamicResource DataGridSelectedColumnHeaderTextBrush}" />
						</Trigger>
						<Trigger Property="SortDirection" Value="Ascending">
							<Setter TargetName="SortArrow" Property="RenderTransform">
								<Setter.Value>
									<RotateTransform Angle="180" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
							<Setter Property="Foreground"
									Value="{DynamicResource DataGridSelectedColumnHeaderTextBrush}" />
							<Setter TargetName="columnHeaderBorder" Property="Background"
									Value="{DynamicResource DataGridHeaderPressedBackgroundBrush}" />
						</Trigger>
						<Trigger Property="SortDirection" Value="Descending">
							<Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
							<Setter Property="Foreground"
									Value="{DynamicResource DataGridSelectedColumnHeaderTextBrush}" />
							<Setter TargetName="columnHeaderBorder" Property="Background"
									Value="{DynamicResource DataGridHeaderPressedBackgroundBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--Style and template for the DataGridColumnHeadersPresenter.-->
	<Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
		<Setter Property="Height" Value="28" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
					<Grid>
						<DataGridColumnHeader x:Name="PART_FillerColumnHeader" IsHitTestVisible="False" />
						<ItemsPresenter />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>