<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:tree="clr-namespace:TreeDataGrid_Warehouse.Controls.TreeDataGrid"
        xmlns:utilities="clr-namespace:TreeDataGrid_Warehouse.Utilities">
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="19" />
        <Setter Property="Height" Value="13" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
                        <Path Fill="Transparent" Stroke="{DynamicResource TextBrushHC}" Name="ExpandPath">
                            <Path.Data>
                                <PathGeometry Figures="M0,0L0,6L6,0z" />
                            </Path.Data>
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="Shape.Stroke" TargetName="ExpandPath"
                                    Value="{DynamicResource HyperlinkBrushHC}" />
                            <Setter Property="Shape.Fill" TargetName="ExpandPath" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="UIElement.RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Shape.Fill" TargetName="ExpandPath" Value="{DynamicResource TextBrushHC}" />
                            <Setter Property="Shape.Stroke" TargetName="ExpandPath"
                                    Value="{DynamicResource TextBrushHC}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="True" />
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                 <Setter Property="UIElement.RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Shape.Fill" TargetName="ExpandPath"
                                        Value="{DynamicResource HyperlinkBrushHC}" />
                                <Setter Property="Shape.Stroke" TargetName="ExpandPath"
                                        Value="{DynamicResource HyperlinkBrushHC}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <utilities:LevelToIndentConverter x:Key="LevelToIndentConverter" />
    <utilities:CanExpandConverter x:Key="CanExpandConverter" />
    <Style TargetType="{x:Type tree:RowExpander}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tree:RowExpander}">
                    <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}"
                            Margin="{Binding Node.Level, Converter={StaticResource LevelToIndentConverter},RelativeSource={RelativeSource AncestorType={x:Type tree:TreeDataGridRow}}}"
                            IsChecked="{Binding Node.IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type tree:TreeDataGridRow}}}"
                            Visibility="{Binding Node.IsExpandable, Converter={StaticResource CanExpandConverter},RelativeSource={RelativeSource AncestorType={x:Type tree:TreeDataGridRow}}}"
                            ClickMode="Press" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type tree:TreeDataGridRow}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource DefaultBGColorBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrushHC}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="ErrorForegroundBrush" Margin="2,0,0,0" Text="Error!"
                            VerticalAlignment="Center" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True"
                            Background="{DynamicResource DataGridRowBackgroundBrush}">
                        <!--<Border.Background>
							<SolidColorBrush x:Name="BackgroundColor"
									Color="{DynamicResource DataGridRowBackgroundColor}" />
						</Border.Background>-->
                        <!--<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal_Selected">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridRowPressedBackgroundColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused_Selected">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridRowPressedBackgroundColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal_Editing">
									<Storyboard></Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver_Editing">
									<Storyboard></Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver_Unfocused_Editing">
									<Storyboard></Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused_Editing">
									<Storyboard></Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridRowMouseOverBackgroundColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver_Selected">
									<Storyboard>
										<ColorAnimation Duration="0" Storyboard.TargetName="BackgroundColor"
												Storyboard.TargetProperty="Color"
												To="{DynamicResource DataGridRowPressedBackgroundColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver_Unfocused_Selected">
									<Storyboard></Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>-->
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1"
                                    Visibility="{TemplateBinding DetailsVisibility}" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, 
                                        ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
                                        Converter={x:Static DataGrid.RowDetailsScrollingConverter}, 
                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                            <DataGridRowHeader Grid.RowSpan="2"
                                    SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, 
                                        ConverterParameter={x:Static DataGridHeadersVisibility.Row}, 
                                        Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DGR_Border" Property="Background"
                                    Value="{DynamicResource DataGridHeaderMouseOverBackgroundBrush}" />
                            <Setter TargetName="DGR_Border" Property="BorderBrush"
                                    Value="{DynamicResource DataGridHeaderMouseOverBorderBrush}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource DataGridSelectedColumnHeaderTextBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="DGR_Border" Property="Background"
                                    Value="{DynamicResource DataGridHeaderMouseOverBackgroundBrush}" />
                            <Setter TargetName="DGR_Border" Property="BorderBrush"
                                    Value="{DynamicResource DataGridHeaderMouseOverBorderBrush}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource DataGridSelectedColumnHeaderTextBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type tree:TreeDataGrid}">
        <Setter Property="BorderBrush" Value="{DynamicResource DataGridRowBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DataGridRowBorderBrush}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DataGridRowBorderBrush}" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="EnableColumnVirtualization" Value="True" />
        <Setter Property="EnableRowVirtualization" Value="True" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="FontFamily" Value="Lucida Console" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border x:Name="border" SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <Border.Background>
                            <SolidColorBrush x:Name="BackgroundColor"
                                    Color="{DynamicResource {x:Static SystemColors.WindowColorKey}}" />
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundColor"
                                                Storyboard.TargetProperty="Color"
                                                To="{DynamicResource DataGridDisabledColor}" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false"
                                Background="{DynamicResource DataGridBackgroundBrush}">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button Focusable="false" Command="{x:Static DataGrid.SelectAllCommand}" Style="{DynamicResource {ComponentResourceKey 
                                                ResourceId=DataGridSelectAllButtonStyle, 
                                                TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, 
                                                ConverterParameter={x:Static DataGridHeadersVisibility.All}, 
                                                Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, 
                                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                Grid.Column="1" Visibility="{Binding HeadersVisibility, 
                                                ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                                                Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2"
                                                Grid.Row="1" CanContentScroll="{TemplateBinding CanContentScroll}" />
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Grid.Row="1"
                                                Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}"
                                                Maximum="{TemplateBinding ScrollableHeight}"
                                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, 
                                                RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, 
                                                     RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1"
                                                    Orientation="Horizontal"
                                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                                    Maximum="{TemplateBinding ScrollableWidth}"
                                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, 
                                                        RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>